using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using System.Linq;

public class textcontrol : MonoBehaviour {

	// Use this for initialization


	public Questions[] question;


	public int answer =0;
	int randomquestionIndex;

	private static List<Questions> unansweredQuestion;
	private Questions currentQuestion;
	private static List<string> firstChoice;
	private static List<string> secondChoice;
	private static List<string> thirdChoice;
	private static List<string> fourthChoice;
	private static List<string> correctAnswer;
	public Text txtquestion;
	public Text txtfirst;
	public Text txtsecond;
	public Text txtthird;
	public Text txtfourth;


	/*private static List<string> question = new List<string>{"Which of the following statements about the Sun’s structure is true?", "Third Largest Planet"};
	private static List<string> firstChoice= new List<string>{"70% of all power generated by the Sun comes from  within 24% of the Sun’s radius.", "fun", "Earth"};
	private static List<string> secondChoice= new List<string>{"The photosphere is a thin innermost layer of the Sun.", "hindi masaya","Jupiter"};
	private static List<string> thirdChoice= new List<string>{"The photosphere  is only slightly more opaque than the air on Earth.", "qweqeqew6","Saturn"};
	private static List<string> fourthChoice= new List<string>{"The radiative zone carries the intense heat of the core outward as thermal radiation.", "qweqeqew7","Jupiter"};
	private static List<string> correctAnswer = new List<string>{"4","1","1"};*/








     void Awake() 
	{


		if (unansweredQuestion == null || unansweredQuestion.Count == 0) 
		{    
			unansweredQuestion = question.ToList<Questions>();
		}



		GetRandomQuestion ();
	
	    
	}
	
	// Update is called once per frame
	void GetRandomQuestion()

	{


		Debug.Log (unansweredQuestion.Count);
		if (unansweredQuestion.Count > 0) 
		{
			randomquestionIndex = Random.Range (0, unansweredQuestion.Count);

			currentQuestion = unansweredQuestion [randomquestionIndex];
			txtquestion.text = currentQuestion.tanong;
			txtfirst.text = currentQuestion.firstchoice;
			txtsecond.text = currentQuestion.secondchoice;
			txtthird.text = currentQuestion.thirdchoice;
			txtfourth.text = currentQuestion.fourthchoice;
			unansweredQuestion.RemoveAt (randomquestionIndex);
		}
		else 
		{
			Debug.Log ("Quiz Finish");	
			//Logic If Quiz is stop randoming
		}

	

	}



	public bool isCorrect()

	{

		if (answer == System.Convert.ToInt32 (currentQuestion.correctanswer))
			//Dito yung animation kapag tama
			return true;
		else
			//Dito yung animation kapag maliii
			Handheld.Vibrate();
			return false;
	}

	public void answer1 ()
	{
		answer = 1;

		if (isCorrect () == true)
			Debug.Log ("Answer is Correct");
		else
			Debug.Log ("Answer is Wrong");
		GetRandomQuestion ();

	


	}

	public void answer2()
	{

		answer = 2;
		if (isCorrect () == true)
			Debug.Log ("Answer is Correct");
		else
			Debug.Log ("Answer is Wrong");
	
		GetRandomQuestion ();

	}
	public void answer3()
	{

		answer = 3;
		if (isCorrect () == true)
			Debug.Log ("Answer is Correct");
		else
			Debug.Log ("Answer is Wrong");

		GetRandomQuestion ();

	}


	public void answer4()
	{
		answer = 4;
		if (isCorrect () == true)
			Debug.Log ("Answer is Correct");
		else
			Debug.Log ("Answer is Wrong");
	
		GetRandomQuestion ();

	}



}
